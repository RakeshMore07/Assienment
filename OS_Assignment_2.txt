What will the following commands do?
 echo "Hello, World!"
Sol :- To Print Hello, World! in shell Scripting

 name="Productive"
Sol :- Stored Productive in name file

 touch file.txt
Sol :- To Create Empty file.txt

 ls -a
Sol : To Show List of Directory and its information

 rm file.txt
Sol :- To remove file.txt

 cp file1.txt file2.txt
Sol :- copy contain of file1.txt to file2.txt

 mv file.txt /path/to/directory/
Sol :- move file.txt to given path

 chmod 755 script.sh
Sol :- To give permision rwx to user and rx to group and other

 grep "pattern" file.txt
Sol :- To find pattern name in file.txt

 kill PID
Sol :- To Kill Process

 mkdir mydir && cd mydir && touch file.txt && echo "Hello, World!" > file.txt && cat file.txt
Sol :- To Create mydir Directory open mydir then add Hello, World in file.txt and then print Hello, World.

 ls -l | grep ".txt"
Sol : To open list of directory with .txt extension 

 cat file1.txt file2.txt | sort | uniq
Sol : To concatinate The file1.txt file2.txt then sort in assending order and to delete duplicat line

 ls -l | grep "^d"
Sol : To Show list of directory and find file specific word

 grep -r "pattern" /path/to/directory/
Sol :-it finds a match in a line

 cat file1.txt file2.txt | sort | uniq –d
Sol :-To concatinate The file1.txt file2.txt then sort in assending order and to delete duplicat line

 chmod 644 file.txt
Sol :-To give wx permition to User,r permision to other and group

 cp -r source_directory destination_directory
Sol :-it create a copy the contents from source directory into destination directory

 find /path/to/search -name "*.txt"
Sol :-find all .txt file from path

 chmod u+x file.txt
Sol :-To give permision to given file

 echo $PATH
Sol :-find which directories is set to check for executable files

Part B
Identify True or False:
1. ls is used to list files and directories in a directory.
Sol :-True

2. mv is used to move files and directories.
Sol :-True

3. cd is used to copy files and directories.
Sol :-False

4. pwd stands for "print working directory" and displays the current directory.
Sol :-true

5. grep is used to search for patterns in files.
Sol :-true

6. chmod 755 file.txt gives read, write, and execute permissions to the owner, and read and execute permissions to group and others.
Sol :-True

7. mkdir -p directory1/directory2 creates nested directories, creating directory2 inside directory1 if directory1 does not exist.
Sol :-True

8. rm -rf file.txt deletes a file forcefully without confirmation.
Sol :-true

Identify the Incorrect Commands:
1. chmodx is used to change file permissions.
Sol : chmod +x

2. cpy is used to copy files and directories.
Sol : cp

3. mkfile is used to create a new file.
Sol : mkdir

4. catx is used to concatenate files.
Sol : cat

5. rn is used to rename files.
Sol : mv

Part C
Question 1: Write a shell script that prints "Hello, World!" to the terminal.
Sol:- Echo "Hello, World!"

Question 2: Declare a variable named "name" and assign the value "CDAC Mumbai" to it. Print thevalue of the variable.
Sol:- #!/bin/bash
	name="Cdac Mumbai"
	echo "$name"

Question 3: Write a shell script that takes a number as input from the user and prints it.
Sol:- #!/bin/bash
	echo "Enter the NUmber"
	read N
	echo "$N"

Question 4: Write a shell script that performs addition of two numbers (e.g., 5 and 3) and prints the result.
Sol:- #!/bin/bash
	a="5"
	b="3"
	((sum=$a+$b))
	echo "$sum"

Question 5: Write a shell script that takes a number as input and prints "Even" if it is even, otherwise prints "Odd".
Sol:- #!/bin/bash
	read n
	if [ $(( $n % 2 )) -eq 0 ]
	then
	echo "$n is even number"
	else
	echo "$n is odd number"
	fi

Question 6: Write a shell script that uses a for loop to print numbers from 1 to 5.
Sol:- #!/bin/bash
	echo "Enter a number : "
	read n
	for ((i=1; i<=n; i++))
	do
        echo $i
	done

Question 7: Write a shell script that uses a while loop to print numbers from 1 to 5.
Sol:- #!/bin/bash
	x=1
	while [ $x -lt 5 ]
	do
        echo $x
        let x+=1
	done

Question 8: Write a shell script that checks if a file named "file.txt" exists in the current directory. If itdoes, print "File exists", otherwise, print "File does not exist".
Sol:- #!/bin/bash
	if [ -f "File.txt" ];
	then
        echo "file exist"
	else
        echo "file not exist"
	fi

Question 9: Write a shell script that uses the if statement to check if a number is greater than 10 and prints a message accordingly.
Sol:- #!/bin/bash
	echo "Enter number"
	read n
	if [ $n -gt 10 ];
	then
        echo "Number Greater than 10"
	else
        echo "num less than 10"
	fi

Question 10: Write a shell script that uses nested for loops to print a multiplication table for numbers from 1 to 5. The output should be formatted nicely, with each row representing a number and each column representing the multiplication result for that number.
Sol:- #!/bin/bash
	for (( i=1; i<=5; i++))
	do
        for (( j=1; j<=10; j++))
        do
        ((T=$j*$i))
        echo "$T"
        done
        echo "-----------------"
	done

Question 11: Write a shell script that uses a while loop to read numbers from the user until the user enters a negative number. For each positive number entered, print its square. Use the break statement to exit the loop when a negative number is entered.
Sol:- #!/bin/bash
	echo "Enter Negative No to exit"
	while :
	do
	echo "Enter No"
        read n

	if [ $n -lt 0 ]
	then
        break
	else
        echo $(($n*$n))
	fi
	done
